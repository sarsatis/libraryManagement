
import os
import json
import uuid
import requests

def download_scan_report(region, scan_arn):
    client = get_inspector_client(region)
    response = client.get_cis_scan_report(
        reportFormat='CSV',
        scanArn=scan_arn,
        targetAccounts=['468896299932']
    )

    print(f"Report URL response for scan {scan_arn}:")
    print(json.dumps(response, indent=4, default=convert_datetime))

    # Get absolute path to the sourcefiles directory
    project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../../..'))
    destination_folder = os.path.join(project_root, 'roles/data_ingestion/sourcefiles')
    os.makedirs(destination_folder, exist_ok=True)

    unique_id = uuid.uuid4()

    if 'url' in response:
        res = requests.get(response['url'])
        if res.status_code == 200:
            filename = f'report_{region}_{unique_id}.csv'
            filepath = os.path.join(destination_folder, filename)
            with open(filepath, 'wb') as file:
                file.write(res.content)
            print(f"Report downloaded for {region} to {filepath}")
        else:
            print(f"Failed to download report for {region}")
    else:
        print(f"No URL found for scan ARN {scan_arn} in {region}")


---
- name: List all directories and files inside the 'files' directory
  find:
    paths: "{{ playbook_dir }}/files"  # Replace this with the path to your 'files' directory
    recurse: yes  # Search recursively in subdirectories
  register: found_files

- name: Display directory structure with folders and files
  debug:
    msg: |
      {%- for item in found_files.files %}
        {%- if item.isdir %}
          Directory: {{ item.path }}
        {%- else %}
          File: {{ item.path }}
        {%- endif %}
      {%- endfor %}
      
- name: Get all files and directories under a path
  find:
    paths: "{{ role_path }}/files"
    recurse: yes
  register: all_items

- name: Print directory structure
  debug:
    msg: "{{ item.path | regex_replace(role_path + '/', '') }}"
  loop: "{{ all_items.files | sort(attribute='path') }}"
